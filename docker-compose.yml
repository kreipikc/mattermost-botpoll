services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
  
  tarantool:
    image: tarantool/tarantool:latest
    container_name: tarantool
    ports:
      - "3301:3301"
    environment:
      - TARANTOOL_USER_NAME=${TARANTOOL_USER}
      - TARANTOOL_USER_PASSWORD=${TARANTOOL_PASSWORD}
    restart: unless-stopped

  mattermost:
    image: mattermost/mattermost-team-edition
    ports:
      - "8065:8065"
    depends_on:
      - postgres
    environment:
      MM_SQLSETTINGS_DRIVERNAME: postgres
      MM_SQLSETTINGS_DATASOURCE: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable&connect_timeout=10"
      MM_SERVICESETTINGS_SITEURL: "http://mattermost:8065"
    volumes:
      - mattermost-data:/mattermost/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8065/api/v4/system/ping"]
      interval: 5s
      timeout: 5s
      retries: 10
  
  bot:
    build:
      context: .
      dockerfile: app/Dockerfile
    depends_on:
      mattermost:
        condition: service_healthy
    command: >
      sh -c "cd app; go run cmd/main.go"

volumes:
  postgres-data:
  mattermost-data: